function strStr(haystack: string, needle: string): number {
let ptr1 = 0; // haystack pointer
    let ptr2 = 0; // needle pointer
    
    // handle edge cases
    if (haystack === needle || needle.length === 0) {
        return 0;
    }
    if (needle.length > haystack.length) {
        return -1;
    }

    while (ptr1 < haystack.length) {
        // find the first character of the needle in the haystack
        while (haystack[ptr1] !== undefined && haystack[ptr1] !== needle[ptr2]) {
            ptr1 += 1;
            ptr2 = 0;
        }
        
        // check if the haystack chars that follow match the needle chars
        while (haystack[ptr1] !== undefined && haystack[ptr1] === needle[ptr2]) {
            ptr1 += 1;
            ptr2 += 1;
        }
        
        // the entire needle was found
        if (ptr2 === needle.length) {
            return ptr1 - ptr2;
        }

        // didn't find needle, so backtrack
        ptr1 = 1 + ptr1 - ptr2;
        ptr2 = 0;
    }
    
    return -1;
};
